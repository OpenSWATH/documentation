Generic Transition Lists
================

Overview
--------

OpenSWATH [1]_ supports generic transition lists in tab- or comma-separated value (TSV/CSV) formats. ``TargetedFileConverter`` is part of `OpenMS
<http://www.openms.org>`_ [2]_ and is available for Windows, macOS and Linux.

Transitions lists from :doc:`tpp` and :doc:`skyline` can be directly converted. Alternatively, it is possible to use the generic transition list format, described below.

Contact and Support
-------------------

We provide support for ``TargetedFileConverter`` using the `OpenMS support channels
<http://open-ms.sourceforge.net/support/bugs/>`_. Please address general questions to the open-ms-general mailing list.

Format
------

The input to ``TargetedFileConverter`` can come either directly from :doc:`tpp` or :doc:`skyline` or the generic transition list format. The columns should be separated either by comma or tab and the files should be saved with Windows or Unix line endings.

The following columns are required:

- ``PrecursorMz`` * (float)
- ``ProductMz`` * (float; synonyms: FragmentMz)
- ``LibraryIntensity`` * (float; synonyms: RelativeFragmentIntensity)
- ``NormalizedRetentionTime`` * (float; synonyms: RetentionTime, Tr_recalibrated, iRT, RetentionTimeCalculatorScore) (normalized retention time)

For targeted proteomics, the following additional columns should be provided:
- ``ProteinId`` ** (free text; synonyms: ProteinName)
- ``PeptideSequence`` ** (free text, sequence only (no modifications); synonyms: Sequence, StrippedSequence)
- ``ModifiedPeptideSequence`` ** (free text, should contain modifications; synonyms: FullUniModPeptideName, FullPeptideName, ModifiedSequence) 
- ``PrecursorCharge`` ** (integer, contains the charge of the precursorl synonyms: Charge)
- ``ProductCharge`` ** (integer, contains the fragment charge; synonyms: FragmentCharge)
- ``FragmentType`` (free text, contains the type of the fragment, e.g. "b" or "y")
- ``FragmentSeriesNumber`` (integer, e.g. for y7 use "7" here; synonyms: FragmentNumber)

.. warning::
   ``ModifiedPeptideSequence`` should contain modifications in UniMod (preferred) (``.(UniMod:1)PEPC(UniMod:4)PEPM(UniMod:35)PEPR.(UniMod:2)``) or TPP (``n[43]PEPC[160]PEPM[147]PEPRc[16]``) formats. N- and C-terminal modifications are indicated after a pre- or suffix ``.``.

OpenSWATH uses grouped transitions to detect candidate analyte signals. These groups are by default generated based on the input, but can also be manually specified:

- ``TransitionGroupId`` (free text, designates the transition group [e.g. peptide] to which this transition belongs; synomys: TransitionGroupName, transition_group_id)
- ``TransitionId`` (free text, needs to be unique for each transition [in this file]; synonyms: TransitionName, transition_name)
- ``Decoy`` (1: decoy, 0: target, i.e. no decoy; determines whether the transition is a decoy transition or not, synomys: decoy, isDecoy)
- ``PeptideGroupLabel`` (free text, designates to which peptide label group (as defined in MS:1000893) the peptide belongs to<sup>2</sup>)
- ``DetectingTransition`` (1: use transition to detect peak group, 0: don't use transition for detection; synonyms: detecting_transition)
- ``IdentifyingTransition`` (1: use transition for peptidoform inference using IPF, 0: don't use transition for identification; synonyms: identifying_transition)
- ``QuantifyingTransition`` (1: use transition to quantify peak group, 0: don't use transition for quantification; synonyms: quantifying_transition)

.. warning::
   If you are unsure about these columns, ``TargetedFileConverter`` and the downstream tools ``OpenSwathAssayGenerator`` and ``OpenSwathDecoyGenerator`` will generate them automatically for you.

Optionally, the following columns can be specified but they are not actively used by OpenSWATH:

- ``CollisionEnergy`` (float; synonyms: CE)
- ``Annotation`` (free text, e.g. y7)
- ``UniprotId`` (free text; synonyms: UniprotID)
- ``LabelType`` (free text, optional description of which label was used, e.g. heavy or light)

  For targeted metabolomics, the following fields are also supported:

- ``CompoundName`` ** (synonyms: CompoundId)
- ``SMILES``
- ``SumFormula``

Fields indicated with * are strictly required while fields indicated with ** are only required in the specific context (proteomics or metabolomics).

Peptide Query Parameter Generation
----------------------------------

Conversion
~~~~~~~~~~

Once the generic transition list is generated by the user (or TPP or Skyline), peptide query parameters can be derived by the OpenSWATH tools part of OpenMS. Please ensure that you have installed the latest version of ``OpenMS/develop`` or the `nightly builds
<https://abibuilder.informatik.uni-tuebingen.de/archive/openms/OpenMSInstaller/nightly/>`_ for Windows and macOS.

.. code-block:: bash

   # Import from SpectraST MRM
   TargetedFileConverter -in transitionlist.mrm -out transitionlist.TraML

   # Import from Skyline or generic transition list format (TSV)
   TargetedFileConverter -in transitionlist.tsv -out transitionlist.TraML

   # Import from Skyline or generic transition list format (CSV)
   TargetedFileConverter -in transitionlist.csv -out transitionlist.TraML

Peptide Query Parameter Generation
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The resulting ``TraML`` file can then be optimized using a set of heuristic rules [3]_:

.. code-block:: bash

   OpenSwathAssayGenerator -in transitionlist.TraML \
   -out transitionlist_optimized.TraML \
   -swath_windows_file swath64.txt \
   -min_transitions 6 \
   -max_transitions 6 \
   -allowed_fragment_types b,y \
   -allowed_fragment_charges 1,2,3,4 \
   -precursor_mz_threshold 0.025 \
   -precursor_lower_mz_limit 400 \
   -precursor_upper_mz_limit 1200 \
   -product_mz_threshold 0.025 \
   -product_lower_mz_limit 350 \
   -product_upper_mz_limit 2000 \


Please note that the SWATH windows file should be of the following format (tab-separated), including header:

.. code-block:: bash

   lower_offset upper_offset
   400 425
   424 450
   ...
   ...

Decoy Generation
~~~~~~~~~~~~~~~~

Decoys can then be appended using ``OpenSwathDecoyGenerator``:

.. code-block:: bash

   OpenSwathDecoyGenerator -in transitionlist_optimized.TraML \
   -out transitionlist_optimized_decoys.TraML \
   -method shuffle \
   -append \
   -mz_threshold 0.1 \
   -remove_unannotated

This processed spectral library (including decoys) is the input for :doc:`openswath`.

References
----------
.. [1] Röst HL, Rosenberger G, Navarro P, Gillet L, Miladinović SM, Schubert OT, Wolski W, Collins BC, Malmström J, Malmström L, Aebersold R. OpenSWATH enables automated, targeted analysis of data-independent acquisition MS data. Nat Biotechnol. 2014 Mar 10;32(3):219-23. doi: 10.1038/nbt.2841. PMID: 24727770

.. [2] Röst HL, Sachsenberg T, Aiche S, Bielow C, Weisser H, Aicheler F, Andreotti S, Ehrlich HC, Gutenbrunner P, Kenar E, Liang X, Nahnsen S, Nilse L, Pfeuffer J, Rosenberger G, Rurik M, Schmitt U, Veit J, Walzer M, Wojnar D, Wolski WE, Schilling O, Choudhary JS, Malmström L, Aebersold R, Reinert K, Kohlbacher O. OpenMS: a flexible open-source software platform for mass spectrometry data analysis. Nat Methods. 2016 Aug 30;13(9):741-8. doi: 10.1038/nmeth.3959. PMID: 27575624

.. [3] Schubert OT, Gillet LC, Collins BC, Navarro P, Rosenberger G, Wolski WE, Lam H, Amodei D, Mallick P, MacLean B, Aebersold R. Building high-quality assay libraries for targeted analysis of SWATH MS data. Nat Protoc. 2015 Mar;10(3):426-41. doi: 10.1038/nprot.2015.015. Epub 2015 Feb 12. PMID: 25675208
